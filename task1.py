# -*- coding: utf-8 -*-
"""Task1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MYnDBc4cukZJr9iROfRLxEty7_-CTgEj

By     : MOHAMMAD IRFAN

Basic LinearRegression Problem.

TASK.1 : Predicting score if a student studies for 9.25 hrs/ day?
"""

# Commented out IPython magic to ensure Python compatibility.
#importing all required libraries
import pandas as pd
import numpy as np  
import matplotlib.pyplot as plt  
# %matplotlib inline

#importing dataset into code
url = "http://bit.ly/w-data"
df = pd.read_csv(url)
print("Data imported successfully")
df.head(20)

"""Based on the data set plotting a graph using matplotlib library"""

# Plotting the distribution of scores
df.plot(x='Hours', y='Scores', style='o')  
plt.title('Hours vs Percentage')  
plt.xlabel('Hours Studied')  
plt.ylabel('Percentage Score')  
plt.show()

#integer-location based indexing for selection position
X = df.iloc[:, :-1].values  
y = df.iloc[:, 1].values

# Spliting the data into test and training set 
from sklearn.model_selection import train_test_split  
X_train, X_test, y_train, y_test = train_test_split(X, y, 
                            test_size=0.2, random_state=0)

"""Training the data set using scikit learn. i.e.,linear Regression."""

# Train the Model
from sklearn.linear_model import LinearRegression  
lr = LinearRegression()  
lr.fit(X_train, y_train)

# Training Set Result

plt.scatter(X_train, y_train, color='red')
plt.plot(X_train, lr.predict(X_train), color='blue');
plt.title("Study hours and percentage")
plt.xlabel("Study hours")
plt.ylabel("percentage")
plt.show()

# Test set results
plt.scatter(X_test, y_test, color = 'blue')
plt.plot(X_train, lr.predict(X_train), color = 'black')
plt.title("Study hours and percentage")
plt.xlabel("Study hours")
plt.ylabel("percentage")
plt.show()

print(X_test) # Testing data - In Hours
y_pred = lr.predict(X_test) # Predicting the scores

# You can also test with your own data here we predict our task 9.25/hr
hours = 9.25
own_pred = round(lr.predict([[9.25]])[0],2)
print("No of Hours = {}".format(hours))
print("Predicted Score = {}".format(own_pred))